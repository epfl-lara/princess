Loading functions2b.pri ...
Preprocessing ...
Proving ...

VALID

Loading tarskiGeometry2.pri ...
Preprocessing ...
Proving ...

VALID

Loading group0.pri ...
Preprocessing ...
Proving ...

VALID

Loading counterExampleBug.pri ...
Preprocessing ...
Constructing countermodel ...

INVALID

Countermodel:
z = 2147483647 & y = -2147483662 & x = -2147483660 & addSigned(32, -2147483662, 13) = 2147483647

Loading omega_problem__031.smt.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 1)

VALID

Loading ricart-agrawala7.smt2 ...
Warning: exit is only supported in incremental mode (option +incremental), ignoring it
Preprocessing ...
Constructing countermodel ...

unknown
(model
  (define-fun time () Int 2)
  (define-fun q () Int 2)
  (define-fun p () Int 1)
  (define-fun s3 ((x!0 Int)) Bool (ite (= x!0 1) false true))
  (define-fun ro ((x!0 Int) (x!1 Int)) Bool (ite (and (= x!0 1) (= x!1 2)) false true))
  (define-fun rd ((x!0 Int) (x!1 Int)) Bool (ite (and (= x!0 2) (= x!1 1)) false true))
  (define-fun s4 ((x!0 Int)) Bool (ite (= x!0 1) true true))
  (define-fun sn ((x!0 Int)) Int (ite (= x!0 1) 1 (ite (= x!0 2) 0 0)))
  (define-fun s6 ((x!0 Int)) Bool (ite (= x!0 1) false (ite (= x!0 2) true true)))
  (define-fun rcs2 ((x!0 Int)) Bool (ite (= x!0 2) true true))
  (define-fun x ((x!0 Int) (x!1 Int)) Bool (ite (and (= x!0 1) (= x!1 2)) false (ite (and (= x!0 2) (= x!1 1)) false true)))
  (define-fun s5 ((x!0 Int)) Bool (ite (= x!0 1) false true))
)

Loading proofBug.pri ...
Preprocessing ...
Constructing countermodel ...

INVALID

Loading multiplication3.pri ...
Preprocessing ...
Proving ...

VALID

Loading vstte-problem-2-vc.pri ...
Preprocessing ...
Proving ...

VALID

Loading soldiers.pri ...
Preprocessing ...
Proving ...

VALID

Under the most-general constraint:
10 >= MinNum

Concrete witness:
MinNum = 10

Loading GEO212+3-complete.p ...
Warning: You are using the normal version of Princess to solve TPTP problems.
         Note that this version assumes a non-standard semantics
         of uninterpreted sorts, defining all domains to be infinite.
         For full support of TPTP please download the dedicated
         CASC/TPTP of Princess from
         http://www.philipp.ruemmer.org/princess.shtml#tptp
Preprocessing ...
Warning: ignoring some quantifiers
Constructing countermodel ...

UNKNOWN

Possible countermodel:
not_orthogonal_lines(3, 4) & orthogonal_lines(6, 7) & convergent_lines(1, 2) & !not_orthogonal_lines(4, 5) & !unorthogonal_lines(6, 7) & !convergent_lines(3, 5)

Loading diamonds.10.2-no-interpolant.i.a.u.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 1182576658)

VALID

Loading abbrev-interpolation.smt2 ...
unsat
((and (and (and (and (and (and (= |main::A3@3| 1) (= |main::A1@3| 0)) (= |main::S0@3| 0)) (= |main::B1@3| 1)) (= |main::S@3| 0)) (= |main::A2@3| (- 2))) (and (<= 0 (+ 4 (+ (* (- 3) |main::E@3|) (* (- 1) |main::E0@3|)))) (<= 0 (+ (* 3 |main::E@3|) |main::E0@3|))))
(and (and (and (and (= |main::A3@3| 1) (= |main::S0@4| 0)) (= |main::B1@3| 1)) (= |main::A2@3| (- 2))) (and (forall ((var0 Int)) (<= 0 (+ 6 (+ (* (- 1) (* |main::A1@3| var0)) (+ (* (- 1) |main::S@4|) (+ (* (- 2) |main::E@4|) (* (- 1) |main::E0@4|))))))) (forall ((var0 Int)) (<= 0 (+ (* |main::A1@3| var0) (+ |main::S@4| (+ (* 2 |main::E@4|) |main::E0@4|))))))))
Loading adt-size3b.pri ...
Preprocessing ...
Proving ...

VALID

Loading adt-large.pri ...
Preprocessing ...
Constructing countermodel ...

INVALID

Countermodel:
y = 643 & x = Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Succ(Leaf

Loading bv-interpolation-7.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 588), simplifying (563), interpolating ...

VALID

Interpolants:
y.\as[int] + x.\as[int] >= 12 | -1*y.\as[int] - x.\as[int] >= -2 | (z = 5 & x = 6) | (z = 4 & x = 4) | (3 >= z & ((1 >= z & ((z = 1 & x = 6) | (z = 0 & x = 4))) | (z >= 2 & ((z = 3 & x = 2) | (z = 2 & x = 0))))) | (z >= 4 & 6 >= x & \exists int v0; 2*v0 + x.\as[int] = 0 & (2*z.\as[int] - x.\as[int] = 12 | (z = 6 & x = 0))) | (-1*y.\as[int] - x.\as[int] >= -10 & y.\as[int] + x.\as[int] >= 8) | (-1*y.\as[int] - x.\as[int] >= -6 & y.\as[int] + x.\as[int] >= 4)
(z = 5 & x = 6 & (y = 5 | y = 1)) | (z = 4 & x = 4 & (y = 3 | y >= 7)) | (y.\as[int] + x.\as[int] = 11 & 1 >= z & x >= 4 & ((z = 1 & x = 6) | (z = 0 & x = 4))) | (y.\as[int] + x.\as[int] = 7 & 3 >= z & ((1 >= z & ((z = 1 & x = 6) | (z = 0 & x = 4))) | (z >= 2 & ((z = 3 & x = 2) | (z = 2 & x = 0))))) | (y.\as[int] + x.\as[int] = 3 & 3 >= z & z >= 2 & 3 >= x & ((z = 3 & x = 2) | (z = 2 & x = 0))) | (\exists int v0; 2*v0 + x.\as[int] = 0 & ((y.\as[int] + x.\as[int] = 7 & z >= 4 & 6 >= x & (2*z.\as[int] - x.\as[int] = 12 | (z = 6 & x = 0))) | (y.\as[int] + x.\as[int] = 3 & z >= 4 & 2 >= x & (2*z.\as[int] - x.\as[int] = 12 | (z = 6 & x = 0)))))
(2*y.\as[int] + 2*x.\as[int] + 2).\as[bv[3]] != 0.\as[bv[3]]

