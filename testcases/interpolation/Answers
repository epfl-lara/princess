Loading columnRed.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 4), simplifying (4), interpolating ...

VALID

Interpolants:
\exists int v0; 2*v0 = x

Loading cryptarithm.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 293), simplifying (332), interpolating ...

VALID

Interpolants:
D != O & N != O & U != O

Loading eqProof2.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 15), simplifying (15), interpolating ...

VALID

Interpolants:
c + b = 26

Loading eqProof3.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 6), simplifying (6), interpolating ...

VALID

Interpolants:
c + b = 26

Loading eqProof4.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 5), simplifying (5), interpolating ...

VALID

Interpolants:
y != 2*d

Loading eqProof5.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 5), simplifying (5), interpolating ...

VALID

Interpolants:
y != 2*d

Loading eqProof6.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 6), simplifying (6), interpolating ...

VALID

Interpolants:
c + b - a != 0

Loading eqProof.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 15), simplifying (15), interpolating ...

VALID

Interpolants:
a = 26

Loading surprising.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 8), simplifying (8), interpolating ...

VALID

Interpolants:
\exists int v0; 5*v0 + y = -1 | \exists int v0; 5*v0 + y = 0

Loading inEqProof0.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 7), simplifying (7), interpolating ...

VALID

Interpolants:
x >= 5

Loading inEqProof1.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 2), simplifying (2), interpolating ...

VALID

Interpolants:
y = x

Loading inEqProof2.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 12), simplifying (13), interpolating ...

VALID

Interpolants:
y - x = -3 | y - x = -2 | y - x = -1 | y = x

Loading inEqProof3.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 2), simplifying (2), interpolating ...

VALID

Interpolants:
x1 >= 1

Loading inEqProof.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 5), simplifying (5), interpolating ...

VALID

Interpolants:
3*b >= a

Loading int_incompleteness2.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 8), simplifying (8), interpolating ...

VALID

Interpolants:
x1 + x2 >= 5 | (x1 + x2 = 4 & \exists int v0; 6*v0 - x2 = -1) | (x1 + x2 = 4 & \exists int v0; 6*v0 + x2 = 2) | (-1*x1 - x2 >= -3 & x1 + x2 >= 2 & \exists int v0; 6*v0 - x2 = -1) | (-1*x1 - x2 >= -2 & x1 + x2 >= 1 & \exists int v0; 6*v0 = x2) | (x1 + x2 >= 3 & \exists int v0; 6*v0 - x1 = -1) | (x1 + x2 >= 3 & \exists int v0; 6*v0 = x2)

Loading int_incompleteness3.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 3), simplifying (3), interpolating ...

VALID

Interpolants:
\exists int v0; 6*v0 + x1 = 8

Loading pidgeon.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 100), simplifying (161), interpolating ...

VALID

Interpolants:
x3 = x1 | x2 = x1

Loading pidgeonSimplified.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 24), simplifying (39), interpolating ...

VALID

Interpolants:
x3 = x1 | x2 = x1

Loading pidgeonSuperSimplified.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 3), simplifying (3), interpolating ...

VALID

Interpolants:
x2 = x1

Loading prog.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 8), simplifying (8), interpolating ...

VALID

Interpolants:
a >= 3 | (a >= 0 & \exists int v0; 2*v0 = a)
3*b >= a
c - a >= 1

Loading prop0.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 17), simplifying (15), interpolating ...

VALID

Interpolants:
p -> q

Loading prop1.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 17), simplifying (19), interpolating ...

VALID

Interpolants:
\exists int v0; 2*v0 = a & (2*c + a - 6*b >= 2 | !p)

Loading prop2.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 4), simplifying (4), interpolating ...

VALID

Interpolants:
p(14, 2*x)

Loading prop3.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 4), simplifying (4), interpolating ...

VALID

Interpolants:
x = 13

Loading prop4.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 7), simplifying (7), interpolating ...

VALID

Interpolants:
\forall int v0; (2*v0 != y | p(v0))

Loading prop5.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 17), simplifying (18), interpolating ...

VALID

Interpolants:
p(2) | p(1)
p(3) | p(2) | p(1) | p(0)

Loading queen2-1.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 9), simplifying (13), interpolating ...

VALID

Interpolants:
x1 - x0 = 1 | x1 - x0 = -1 | x1 = x0 | x0 - x2 >= 2

Loading queen3-1.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 9), simplifying (13), interpolating ...

VALID

Interpolants:
x1 - x0 = 1 | x1 - x0 = -1 | x1 = x0 | x0 - x2 >= 2

Loading super_queen2-1.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 10), simplifying (13), interpolating ...

VALID

Interpolants:
x1 - x0 = 1 | x1 - x0 = -1 | x0 - x2 >= 2

Loading super_queen3-1.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 11), simplifying (17), interpolating ...

VALID

Interpolants:
x2 - x1 = 2 | x2 - x1 = -2 | x2 - x1 = 1 | x2 - x1 = -1

Loading cav-ex4b.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 50), simplifying (87), interpolating ...

VALID

Interpolants:
\forall int v0, v1; (v0 - n >= 1 | v1 - v0 >= 1 | -1 >= v1 | h'(f(v0)) + -1*h'(f(v1)) >= 0)
\exists int v0, v1; (n >= v0 & v0 >= v1 & v1 >= 0 & -1*h'(f(v0)) + h'(f(v1)) >= 1)

Loading quan.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 4), simplifying (7), interpolating ...

VALID

Interpolants:
c >= 0

Loading ring_2exp10_3vars_2ite_unsat.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 1990), simplifying (2142), interpolating ...

VALID

Interpolants:
v_princess_0 = 2*v2 | v2 >= 1024 | (v_princess_0 - 2*v2 = -1024 & v2 >= 512)

Loading arrays0.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 7), simplifying (11), interpolating ...

VALID

Interpolants:
true
true
true
true
true
prob_index'2 != 1 | select(prres0'1, 1) = 1
prob_index'2 != 1 | select(prres0'1, 1) = 1
prob_index'2 != 1
prob_index'2 != 1

Loading constOrderBug.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 107), simplifying (135), interpolating ...

VALID

Interpolants:
sym2 = sym1 & (sym1 = 0 | (2 >= sym1 & sym1 >= 1))

Loading strange_concurrency.pri ...
Preprocessing ...
Constructing countermodel ...

INVALID

Countermodel:
id1 = 0 & id0 = 2 & write1' = 33 & write0' = 48 & write1 = 33 & write0 = 32 & read1' = 33 & read0' = 48 & read1 = 33 & read0 = 32 & A4 = 53 & A3 = 52 & A2 = 51 & A1 = 50 & A0 = 49 & j2' = 1 & j1' = 0 & j0' = 15 & j2 = 2 & j1 = 1 & j0 = 0 & i2' = 33 & i1' = 33 & i0' = 33 & i2 = 32 & i1 = 32 & i0 = 32 & select(52, 33) = 57 & select(51, 48) = 54 & select(51, 33) = 57 & select(50, 48) = 54 & select(50, 33) = 56 & select(49, 48) = 54 & select(49, 33) = 56 & select(49, 32) = 59 & store(52, 33, 58) = 53 & store(51, 48, 55) = 52 & store(50, 33, 57) = 51 & store(49, 32, 60) = 50 & T(33, 33, 15, 0, 51, 52, 48, 48) & T(33, 33, 0, 1, 52, 53, 33, 33) & T(32, 32, 1, 2, 50, 51, 33, 33) & T(32, 32, 0, 1, 49, 50, 32, 32)

Loading wrongInterpolant3.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 45), simplifying (60), interpolating ...

VALID

Interpolants:
1 >= j1 & \exists int v0; 4*v0 + j1 + i1 = 1

Loading omegaBug.pri ...
Preprocessing ...
Constructing countermodel ...

INVALID

Countermodel:
sym9 = 0 & sym8 = 0 & sym7 = 36 & sym6 = 35 & sym5 = 1 & sym4 = 2 & sym3 = 1 & sym2 = 34 & sym1 = 34 & sym0 = 268435456 & select(36, 1) = 12 & select(35, 1) = 12 & store(35, 2, 3) = 36 & store(34, 1, 12) = 35 & inUnsigned(32, 2) & inUnsigned(32, 1) & inUnsigned(32, 0) & inSigned(32, 268435456) & inArray(36) & inArray(35) & inArray(34)

Loading splitEq.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 75), simplifying (140), interpolating ...

VALID

Interpolants:
10000000 >= x & x >= -1000000

Loading incorrectPredInterpolant.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 9), simplifying (13), interpolating ...

VALID

Interpolants:
e - d >= 2 | (e - d = 1 & p(-1*d)) | (e = 0 & (-1 >= d | (d = 0 & p(0))))

Loading certificateBug.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 1), simplifying (1), interpolating ...

VALID

Interpolants:
true

Loading missingOmegaSupport.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 946), simplifying (759), interpolating ...

VALID

Interpolants:
7*x7 + 2*x5 + x2 + x9 + 3*x0 + 17*x6 + 2*x3 >= 7 & x5 + x8 + x3 - x6 - x2 >= -1 & x5 + x2 + 2*x0 + 4*x6 + x3 - x8 - 2*x9 >= 5

Loading bignum_lia1.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 59), simplifying (44), interpolating ...

VALID

Interpolants:
x4 >= 19670160000*x1 | x4 >= 16039976000*x1 | x4 >= 9835080000*x1 | x4 >= 8019988000*x1 | x4 >= 1

Loading linear-combination-bug.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 13), simplifying (13), interpolating ...

VALID

Interpolants:
0 >= x1 & x1 >= -4

Loading div-right-bug.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 16), simplifying (16), interpolating ...

VALID

Interpolants:
\exists int v0; 5*v0 + c = 2

Loading tree.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 34), simplifying (93), interpolating ...

VALID

Interpolants:
value(c) = 42 & right(a) = c & value(right(left(a))) = 8

Loading axiom-instantiation-bug.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 11), simplifying (14), interpolating ...

VALID

Interpolants:
\forall int v0; 2*v0 + a != -1

Loading nonlin.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 4), simplifying (4), interpolating ...

VALID

Interpolants:
x = 1
y != 3

Loading adt-interpolation.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 7), simplifying (11), interpolating ...

VALID

Interpolants:
!is_nil(l)

Loading adt-interpolation2.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 6), simplifying (10), interpolating ...

VALID

Interpolants:
!is_nil(l)

Loading bool-interpolation.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 18), simplifying (30), interpolating ...

VALID

Interpolants:
!f(false) & !f(true)

Loading bv-interpolation-1.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 192), simplifying (227), interpolating ...

VALID

Interpolants:
48 >= a & a >= 0 & \exists int v0; 2*v0 - a.\as[int] = -256
3*b.\as[int] >= a & 24 >= b
c.\as[int] - a.\as[int] >= 1

Loading bv-interpolation-2.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 65), simplifying (76), interpolating ...

VALID

Interpolants:
126 >= a & a >= 0 & \exists int v0; 2*v0 - a.\as[int] = -256
3*b.\as[int] >= a
c.\as[int] - a.\as[int] >= 1

Loading bv-interpolation-3.smt2 ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 16), simplifying (19), interpolating ...

unsat
(
  (or (bvuge b (_ bv1000 16)) (bvsge (bvadd (_ bv524285 19) (bvadd (bvneg ((_ zero_extend 3) b)) ((_ zero_extend 3) a))) (_ bv0 19)))
  (bvuge b (_ bv1000 16))
)

Loading bv-interpolation-4.smt2 ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 102), simplifying (115), interpolating ...

unsat
(
  (and (bvuge a (_ bv1 8)) (and (or (bvsge (bvadd (_ bv255 12) (bvadd (bvmul (_ bv4094 12) ((_ zero_extend 4) b)) ((_ zero_extend 4) a))) (_ bv0 12)) (bvsge (bvadd (_ bv127 10) (bvneg ((_ zero_extend 2) b))) (_ bv0 10))) (or (bvsge (bvadd (_ bv4095 12) (bvadd (bvmul (_ bv4094 12) ((_ zero_extend 4) b)) ((_ zero_extend 4) a))) (_ bv0 12)) (bvuge b (_ bv128 8)))))
  (and (and (bvsge (bvadd (_ bv254 10) (bvneg ((_ zero_extend 2) a))) (_ bv0 10)) (bvuge a (_ bv1 8))) (and (or (= (bvadd (_ bv3841 12) (bvadd (bvmul (_ bv2 12) ((_ zero_extend 4) b)) (bvneg ((_ zero_extend 4) a)))) (_ bv0 12)) (bvsge (bvadd (_ bv127 10) (bvneg ((_ zero_extend 2) b))) (_ bv0 10))) (or (= (bvadd (_ bv1 12) (bvadd (bvmul (_ bv2 12) ((_ zero_extend 4) b)) (bvneg ((_ zero_extend 4) a)))) (_ bv0 12)) (bvuge b (_ bv128 8)))))
)

Loading bv-interpolation-5.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 10), simplifying (13), interpolating ...

VALID

Interpolants:
i1_3_0 = 100
i2_2_0 = 101
i1_1_0 != 75
i1_1_0 = 75
i2_2_0 != 101
i1_3_0 != 100

Loading bv-interpolation-6.smt2 ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 8), simplifying (11), interpolating ...

unsat
(
  (not (= b (_ bv11 8)))
)

Loading bv-interpolation-8.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 10), simplifying (22), interpolating ...

VALID

Interpolants:
(2*z.\as[int] + 4*y.\as[int] + 3*x.\as[int]).\as[bv[16]] = 0.\as[bv[16]]
(2*y.\as[int] + 2*x.\as[int] + 2).\as[bv[16]] != 0.\as[bv[16]]

Loading function-bug.smt2 ...
Warning: echo is only supported in incremental mode (option +incremental), ignoring it
Warning: echo is only supported in incremental mode (option +incremental), ignoring it
Preprocessing ...
Constructing countermodel ...
Found proof (size 20), simplifying (29), interpolating ...

unsat
(
  (or (= (select a_0 (+ 1 ULTIMATE.start_i_-1)) 23) (and (and (not (= (+ ULTIMATE.start_i_-1 (* (- 1) upper_-1)) (- 1))) (<= 0 (+ (* (- 1) ULTIMATE.start_i_-1) upper_-1))) (or (not (= ULTIMATE.start_i_-1 upper_-1)) (= (select a_0 upper_-1) 23))))
  (or (= (select a_0 (+ 1 ULTIMATE.start_i_-1)) 23) (= (select a_0 ULTIMATE.start_i_-1) 23))
  (= (select a_0 (+ 1 ULTIMATE.start_i_-1)) 23)
)

Loading function-bug2.smt2 ...
Warning: echo is only supported in incremental mode (option +incremental), ignoring it
Warning: echo is only supported in incremental mode (option +incremental), ignoring it
Preprocessing ...
Constructing countermodel ...
Found proof (size 19), simplifying (28), interpolating ...

unsat
(
  (or (= (f (+ 1 ULTIMATE.start_i_-1)) 23) (and (and (not (= (+ ULTIMATE.start_i_-1 (* (- 1) upper_-1)) (- 1))) (<= 0 (+ (* (- 1) ULTIMATE.start_i_-1) upper_-1))) (or (not (= ULTIMATE.start_i_-1 upper_-1)) (= (f upper_-1) 23))))
  (or (= (f (+ 1 ULTIMATE.start_i_-1)) 23) (= (f ULTIMATE.start_i_-1) 23))
  (= (f (+ 1 ULTIMATE.start_i_-1)) 23)
)

Loading pred-unify-bug.smt2 ...
Warning: treating sort Real as Int
"starting trace check"
unsat
"interpolants-3"
((= (select |#length_13| main_~p~4.base_18) 8))
Loading rule60_list2.c_false-unreach-call_1.cil.c.smt2 ...
Warning: treating sort Real as Int
unsat
((forall ((var0 Int)) (not (= (+ (* 4294967296 var0) (+ list_add_~__cil_tmp5~16_44 (* (- 1) list_add_~__cil_tmp4~16_42))) 0))))
Loading function-bug3.smt2 ...
"Start declaration of constants"
"Finished declaration of constants"
"Start declaration of functions"
Warning: treating sort Real as Int
"Finished declaration of functions"
"Start declaration of global variables"
"Finished declaration global variables"
"Start declaration of local variables"
"Finished declaration local variables"
"starting trace check"
unsat
Loading simplifier.smt2 ...
Warning: treating sort Real as Int
unsat
Warning: not all asserted formulas are mentioned in interpolant specification, putting remaining formulas in the last/root partition
(true
true
(= main_~a~4.offset_2 0)
(and (and (= main_~p~4.offset_3 0) (= main_~p~4.base_3 main_~a~4.base_2)) (= main_~a~4.offset_2 0))
(and (and (= main_~p~4.offset_3 0) (= main_~p~4.base_3 main_~a~4.base_2)) (= main_~a~4.offset_2 0))
(and (and (= main_~p~4.offset_3 0) (= main_~p~4.base_3 main_~a~4.base_2)) (= main_~a~4.offset_2 0))
(or (not (= |#offset~STRUCT#?h~INT?n~$Pointer$#~h| 0)) (and (and (and (= main_~p~4.offset_3 0) (= main_~p~4.base_3 main_~a~4.base_2)) (= main_~a~4.offset_2 0)) (not (= (select (select |#memory_int_6| main_~a~4.base_2) 0) 1))))
(or (or (not (= |#offset~STRUCT#?h~INT?n~$Pointer$#~n| 4)) (not (= |#offset~STRUCT#?h~INT?n~$Pointer$#~h| 0))) (not (= (select (select |#memory_int_7| main_~p~4.base_7) main_~p~4.offset_7) 1)))
(or (or (not (= |#offset~STRUCT#?h~INT?n~$Pointer$#~n| 4)) (not (= |#offset~STRUCT#?h~INT?n~$Pointer$#~h| 0))) (not (= (select (select |#memory_int_7| main_~p~4.base_7) main_~p~4.offset_7) 1)))
(or (or (not (= |main_#t~mem15_9| 1)) (not (= |#offset~STRUCT#?h~INT?n~$Pointer$#~n| 4))) (not (= |#offset~STRUCT#?h~INT?n~$Pointer$#~h| 0)))
(or (not (= |#offset~STRUCT#?h~INT?n~$Pointer$#~n| 4)) (not (= |#offset~STRUCT#?h~INT?n~$Pointer$#~h| 0)))
(or (not (= |#offset~STRUCT#?h~INT?n~$Pointer$#~n| 4)) (not (= |#offset~STRUCT#?h~INT?n~$Pointer$#~h| 0))))
Loading smtTyping.smt2 ...
Warning: treating sort Real as Int
unsat
Warning: not all asserted formulas are mentioned in interpolant specification, putting remaining formulas in the last/root partition
((and (not (= |cstpncpy_~#dst.base_0| 0)) (and (and (forall ((var0 Int)) (or (= var0 |cstpncpy_~#dst.base_0|) (= (select |old(#valid)_-1| var0) (select |#valid_0| var0)))) (forall ((var0 Int)) (or (= var0 |cstpncpy_~#dst.base_0|) (or (not (select |#valid_0| var0)) (select |old(#valid)_-1| var0))))) (not (select |old(#valid)_-1| |cstpncpy_~#dst.base_0|))))
(and (not (= |cstpncpy_~#dst.base_0| 0)) (and (and (forall ((var0 Int)) (or (= var0 |cstpncpy_~#dst.base_0|) (= (select |old(#valid)_-1| var0) (select |#valid_0| var0)))) (forall ((var0 Int)) (or (= var0 |cstpncpy_~#dst.base_0|) (or (not (select |#valid_0| var0)) (select |old(#valid)_-1| var0))))) (not (select |old(#valid)_-1| |cstpncpy_~#dst.base_0|))))
(and (forall ((var0 Int)) (or (not (select |#valid_2| var0)) (select |old(#valid)_-1| var0))) (exists ((var0 Int)) (and (not (select |old(#valid)_-1| var0)) (and (not (= var0 0)) (forall ((var1 Int)) (or (= var1 var0) (= (select |old(#valid)_-1| var1) (select |#valid_2| var1)))))))))
Loading matchCheckBug.smt2 ...
Warning: treating sort Real as Int
unsat
Loading treeInterpolation1.smt2 ...
unsat
((<= 0 (f x))
(<= 0 (+ (- 1) (* (- 1) (f y)))))
Loading treeInterpolation2.smt2 ...
unsat
Warning: not all asserted formulas are mentioned in interpolant specification, putting remaining formulas in the last/root partition
((= |#valid_4| |old(#valid)_4|)
(and (forall ((var0 Int)) (or (not (select |#valid_13| var0)) (select |old(#valid)_5| var0))) (forall ((var0 Int)) (or (select |#valid_13| var0) (not (select |old(#valid)_5| var0))))))
Loading enum-interpolation.smt2 ...
unsat
((= x blue))
Loading prp-2-17.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 344397), simplifying (6197), interpolating ...

VALID

Interpolants:
(v_princess_0 = 402 & i844 != 1) | (v_princess_0 = 19 & i844 != 1) | (v_princess_0 != 22 & i844 != 1) | (i844 != 1 & (v_princess_0 = 30 | v_princess_0 = 19))

Loading prp-3-18.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 25407), simplifying (5507), interpolating ...

VALID

Interpolants:
v_princess_0 != 22 & i844 != 1

Loading adt-interpolation-unfold.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 66), simplifying (131), interpolating ...

VALID

Interpolants:
\size(y) != 3
succ(succ(one)) = x
y = x

Loading adt-interpolation-unfold2.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 90), simplifying (128), interpolating ...

VALID

Interpolants:
nil = u1
\size(u1) != 1

Loading adt-interpolation-unfold3.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 2984), simplifying (4675), interpolating ...

VALID

Interpolants:
u3 = u1 | \size(u3) != 3
(u3 = 2 & 1 >= u2 & (u2 != 1 | Union_size(2) != 3 | Union_size(0) != 3) & (u2 != 0 | Union_size(2) != 3 | Union_size(1) != 3)) | (u3 = 1 & u2 = 2 & (Union_size(1) != 3 | Union_size(0) != 3)) | (u3 = 1 & u2 = 0 & (Union_size(2) != 3 | Union_size(1) != 3)) | (u3 = 0 & (u2 != 2 | Union_size(1) != 3 | Union_size(0) != 3) & (u2 >= 2 | (u2 = 1 & (Union_size(2) != 3 | Union_size(0) != 3))))

Loading surprising25.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 8), interpolating ...

VALID

Interpolants:
\exists int v0; (25*v0 - y >= -13 & y - 25*v0 >= -10 & 50*v0 >= 0 & 25*v0 + y >= -19 & -25*v0 >= y)

Loading bignum_lia1.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 59), interpolating ...

VALID

Interpolants:
x4 - 19670160000*x1 >= 7999 | x4 - 16039976000*x1 >= 7999 | x4 - 9835080000*x1 >= 3999 | x4 - 8019988000*x1 >= 3999 | x4 >= 7999 | \exists int v0; (8000*v0 >= 19670160000*x1 & 8000*v0 - x4 >= -7998 & x4 >= 8000*v0) | \exists int v0; (8000*v0 >= 16039976000*x1 & 8000*v0 - x4 >= -7998 & x4 >= 8000*v0) | \exists int v0; (4000*v0 >= 9835080000*x1 & 4000*v0 - x4 >= -3998 & x4 >= 4000*v0) | \exists int v0; (4000*v0 >= 8019988000*x1 & 4000*v0 - x4 >= -3998 & x4 >= 4000*v0) | \exists int v0; (10480000*v0 >= 10480000 & 10480000*v0 - x4 >= -10479998 & x4 - 10480000*v0 >= 7999) | \exists int v0; (4000*v0 >= 4000 & 4000*v0 - x4 >= -3998 & x4 >= 4000*v0) | \exists int v0; (8000*v0 - x4 >= -7998 & x4 >= 8000*v0 & 10480000*v0 >= 10480000 & 10472000*v0 >= -10471999 & -10472000*v0 >= 0)

Loading ring_2exp10_3vars_0ite_unsat.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 517)


VALID
